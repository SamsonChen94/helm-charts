{{- if .Values.secrets }}
{{- if .Values.secrets.enabled }}
{{- if and ( not .Values.secrets.fileNames ) ( not .Values.secrets.variableNames ) }}
{{- fail "\n\nError --> fileNames or variableNames are required when secrets are enabled\n" }}
{{- end }}
{{- if and .Values.secrets.fileNames ( not .Values.secretFiles ) }}
{{- fail "\n\nError --> no secretFiles found, did you include secrets file in your helm command?\n" }}
{{- end }}
{{- if and .Values.secrets.variableNames ( not .Values.secretValues ) }}
{{- fail "\n\nError --> no secretVariables found, did you include secrets file in your helm command?\n"}}
{{- end }}
apiVersion: v1
data:
  {{- range $filename := .Values.secrets.fileNames }}
  {{- $fileData := get $.Values.secretFiles ( printf $filename ) }}
  {{- if eq $fileData "" }}
  {{- fail ( printf "\n\nError --> %s does not exist in secrets\n" $filename ) }}
  {{- end }}
  {{ $filename }}: {{ $fileData | b64enc | quote }}
  {{- end }}
  {{- range $variableName := .Values.secrets.variableNames }}
  {{- $variableData := get $.Values.secretValues ( print $variableName ) }}
  {{- if eq $variableData "" }}
  {{- fail ( printf "\n\nError --> %s does not exist in secrets\n" $variableName ) }}
  {{- end }}
  {{ $variableName }}: {{ $variableData | b64enc | quote }}
  {{- end }}
kind: Secret
metadata:
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    {{- if .Values.labelOverride }}
{{ toYaml .Values.labelOverride | indent 4 }}
    {{- end }}
  name: {{ template "fullname" . }}-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
{{- end }}
{{- end }}
