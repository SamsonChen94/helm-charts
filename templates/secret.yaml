{{- /*
  This resource is only for secrets. Data is stored directly in Kubernetes in
  the form of the secret Kubernetes resource. Secrets will be injected into the
  workload post-deployment. Secret can store either strings or files. This
  implementation assumes all secret environment variables from the workload are
  defined inside secrets. This means strings are injected as environment
  variables via 'env' definition and files are injected as file mounted objects
  via the 'mountVolume' and 'volume' definitions.
  Ref: https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure
*/}}
{{- $secretDataFiles := ( list ) }}
{{- $secretDataStrings := ( list ) }}
{{- if .Values.additionalContainers }}
{{- range $additionalContainer := .Values.additionalContainers }}
{{- $_ := set $additionalContainer "secretFiles" $.Values.secretFiles }}
{{- $_ := set $additionalContainer "secretStrings" $.Values.secretStrings }}
{{- $additionalSecretArgs := dict "secret" $additionalContainer "secretOutput" (dict) }}
{{- include "secretEnabledCheck" $additionalSecretArgs }}
{{- if $additionalSecretArgs.secretOutput.secretFile }}
{{- $secretDataFiles = concat $secretDataFiles $additionalSecretArgs.secret.secrets.files }}
{{- end }}
{{- if $additionalSecretArgs.secretOutput.secretString }}
{{- $secretDataStrings = concat $secretDataStrings $additionalSecretArgs.secret.secrets.strings }}
{{- end }}
{{- end }}
{{- end }}
{{- $secretArgs := dict "secret" .Values "secretOutput" (dict) }}
{{- include "secretEnabledCheck" $secretArgs }}
{{- if or ( or $secretArgs.secretOutput.secretFile $secretArgs.secretOutput.secretString ) ( or ( not ( empty $secretDataFiles ) ) ( not ( empty $secretDataStrings ) ) ) }}
{{- if $secretArgs.secretOutput.secretFile }}
{{- $secretDataFiles = concat $secretArgs.secret.secrets.files $secretDataFiles }}
{{- end }}
{{- if $secretArgs.secretOutput.secretString}}
{{- $secretDataStrings = concat $secretArgs.secret.secrets.strings $secretDataStrings }}
{{- end }}
apiVersion: v1
data:
  {{- if $secretDataFiles }}
  {{- range $secretFileName := $secretDataFiles }}
  {{ $secretFileName }}: {{ get $secretArgs.secret.secretFiles ( printf $secretFileName ) | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- if $secretDataStrings }}
  {{- range $secretStringName := $secretDataStrings }}
  {{ $secretStringName }}: {{ get $secretArgs.secret.secretStrings ( printf $secretStringName ) | b64enc | quote }}
  {{- end }}
  {{- end }}
kind: Secret
metadata:
  labels:
    {{- include "labels" . | nindent 4 }}
  name: {{ template "fullname" . }}-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
{{- end }}
