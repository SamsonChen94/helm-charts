{{- /*
  This resource is only for horizontal pod autoscalers (HPA). HPAs function as
  scaling mechanisms for workloads such as deployments and stateful sets. As
  for the scaling metric multiple forms of metrics from multiple sources can be
  used to scale a workload up or down. HPAs support scaling on multiple metrics
  (i.e. scaling for CPU and memory).
  Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale
*/}}
{{- $hpaArgs := dict "hpa" .Values.hpa "hpaOutput" (dict) }}
{{- include "hpaEnabled" $hpaArgs }}
{{- if $hpaArgs.hpaOutput.hpaEnabled }}
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    {{- include "labels" . | nindent 4 }}
  name: {{ template "fullname" . }}-hpa
  namespace: {{ .Release.Namespace }}
spec:
  maxReplicas: {{ $hpaArgs.hpa.max }}
  metrics:
    {{- if $hpaArgs.hpa.targetCPU }}
    - resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ $hpaArgs.hpa.targetCPU }}
      type: Resource
    {{- else }}
    {{- fail ( printf "\n\nError --> Scaling target metrics not found.\n" ) -}}
    {{- end }}
  minReplicas: {{ $hpaArgs.hpa.min }}
  scaleTargetRef:
    {{- if eq .Values.workload "deployment" }}
    apiVersion: apps/v1
    kind: Deployment
    name: {{ template "fullname" . }}-deploy
    {{- else }}
    {{- fail ( printf "\n\nError --> Unsupported HPA target reference for workload %s\n" .Values.workload ) -}}
    {{- end }}
{{- end }}
