{{- /*
  This resource is only for cron jobs. One of the main workloads in a
  Kubernetes environment. Cron jobs are normally standalone processes that does
  not require any additional scaling or networking configurations.
  Ref: https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs
*/}}
{{- if eq .Values.workload "cronjob" }}
{{- if not .Values.cronSettings }}
{{- fail ( printf "\n\nError --> Workload is set to 'cronjob' but cronSettings is missing\n" ) -}}
{{- end }}
{{- $cron := .Values.cronSettings }}
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    {{- include "labels" . | nindent 4 }}
  name: {{ template "fullname" . }}-cj
  namespace: {{ .Release.Namespace }}
spec:
  {{- if and ( and ( ne $cron.concurrency "Allow" ) ( ne $cron.concurrency "Forbid" ) ) ( and ( ne $cron.concurrency "Replace" ) ( not ( empty $cron.concurrency ) ) )}}
  {{- fail ( printf "\n\nError --> Invalid cronSettings.concurrency detected\n" ) -}}
  {{- end }}
  concurrencyPolicy: {{ $cron.concurrency | default "Allow" }}
  failedJobsHistoryLimit: {{ $cron.maxFailedHistory | default 1 }}
  jobTemplate:
    metadata:
      labels:
        {{- include "labels" . | nindent 8 }}
    spec:
      {{- include "podSpecTemplate" . | indent 6 }}
  schedule: {{ required "\n\nError --> cronSettings.schedule required if workload is set to cronjob" $cron.schedule | quote }}
  successfulJobsHistoryLimit: {{ $cron.maxSucceedHistory | default 3 }}
  {{- if or ( eq $cron.enabled true ) ( eq $cron.enabled false ) }}
  suspend: {{ not $cron.enabled }}
  {{- else }}
  suspend: false
  {{- end }}
{{- end }}
