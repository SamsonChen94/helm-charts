suite: test cron job only
templates:
  - cronJob.yaml
tests:
  - it: should result in an empty file
    release:
      name: test
      namespace: testing-ns
      isUpgrade: true
    asserts:
      - hasDocuments:
          count: 0
  - it: should return correct metadata information
    set:
      imageName: nginx
      imageTag: latest
      workload: cronjob
      cronSettings.schedule: "* * * * *"
    release:
      name: test
      namespace: testing-ns
      isUpgrade: true
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: batch/v1
      - isKind:
          of: CronJob
      - equal:
          path: metadata.name
          value: test-cj
      - equal:
          path: metadata.namespace
          value: testing-ns
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].name
          value: test
  - it: should return non-null labels
    set:
      imageName: nginx
      imageTag: latest
      workload: cronjob
      cronSettings.schedule: "* * * * *"
    asserts:
      - isNotNull:
          path: metadata.labels
      - isNotNull:
          path: spec.jobTemplate.metadata.labels
      - isNotNull:
          path: spec.jobTemplate.spec.template.metadata.labels
  - it: should return correct image information
    set:
      imageName: nginx
      imageTag: latest
      workload: cronjob
      cronSettings.schedule: "* * * * *"
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].image
          value: nginx:latest
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].imagePullPolicy
          value: Always
  - it: should return correct image pull policy
    values:
      - ./values/cj-only.yaml
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
  - it: should return container data for additional container
    values:
      - ./values/cj-only.yaml
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].image
          value: nginx:v1.0.0
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].imagePullPolicy
          value: IfNotPresent
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].name
          value: secondary-container
  - it: should return correct cron schedule
    set:
      imageName: nginx
      imageTag: latest
      workload: cronjob
      cronSettings.schedule: "* * * * *"
    asserts:
      - equal:
          path: spec.schedule
          value: "* * * * *"
  - it: should return correct optional cron settings
    values:
      - ./values/cj-only.yaml
    asserts:
      - equal:
          path: spec.suspend
          value: false
      - equal:
          path: spec.concurrencyPolicy
          value: Forbid
      - equal:
          path: spec.failedJobsHistoryLimit
          value: 1
      - equal:
          path: spec.successfulJobsHistoryLimit
          value: 1
  - it: should return disabled (suspended) cron job but still generates YAML file
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings:
        schedule: "* * * * *"
        enabled: false
    asserts:
      - equal:
          path: spec.suspend
          value: true
  - it: should return default cron value settings
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings:
        schedule: "* * * * *"
    asserts:
      - equal:
          path: spec.suspend
          value: false
      - equal:
          path: spec.concurrencyPolicy
          value: Allow
      - equal:
          path: spec.successfulJobsHistoryLimit
          value: 3
      - equal:
          path: spec.failedJobsHistoryLimit
          value: 1
  - it: should return correct resource configuration for main container only
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      resources.requests.cpu: 100m
      resources.limits.cpu: 100m
      resources.requests.memory: 100Mi
      resources.limits.memory: 100Mi
      cronSettings.schedule: "* * * * *"
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources
          value:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
  - it: should return correct resource configuration for additional container
    values:
      - ./values/cj-only.yaml
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources
          value:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].resources
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].resources
          value:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
  - it: should return correct commands and arguments for main container only
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      command: /bin/bash
      argument: test.sh foo bar
      cronSettings.schedule: "* * * * *"
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].command
          value:
            - /bin/bash
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].args
          value:
            - test.sh
            - foo
            - bar
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].command
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].args
  - it: should return correct command for secondary container only
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
          command: /bin/sh
          argument: test-2.sh foo2 bar2
    asserts:
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].command
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].args
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].command
          value:
            - /bin/sh
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].args
          value:
            - test-2.sh
            - foo2
            - bar2
  - it: should return correct commands and arguments for all containers
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      command: /bin/bash
      argument: test.sh foo bar
      cronSettings.schedule: "* * * * *"
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
          command: /bin/sh
          argument: test-2.sh foo2 bar2
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].command
          value:
            - /bin/bash
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].args
          value:
            - test.sh
            - foo
            - bar
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].command
          value:
            - /bin/sh
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].args
          value:
            - test-2.sh
            - foo2
            - bar2
  - it: should only return liveness probe for main container
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
      liveness:
        action:
          exec:
            command:
              - cat
              - /tmp/healthy
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].livenessProbe
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].livenessProbe
  - it: should only return liveness probe for secondary container
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
          liveness:
            action:
              exec:
                command:
                  - cat
                  - /tmp/healthy
    asserts:
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].livenessProbe
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].livenessProbe
  - it: should return correct liveness probes for all containers
    values:
      - ./values/cj-only.yaml
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].livenessProbe
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].livenessProbe.exec
          value:
            command:
              - cat
              - /tmp/healthy
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].livenessProbe
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].livenessProbe.exec
          value:
            command:
              - cat
              - /tmp/healthy4
  - it: should only return readiness probe for main container
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
      readiness:
        action:
          exec:
            command:
              - cat
              - /tmp/healthy
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].readinessProbe
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].readinessProbe
  - it: should only return readiness probe for secondary container
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
          readiness:
            action:
              exec:
                command:
                  - cat
                  - /tmp/healthy
    asserts:
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].readinessProbe
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].readinessProbe
  - it: should return correct readiness probes for all containers
    values:
      - ./values/cj-only.yaml
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].readinessProbe
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].readinessProbe.exec
          value:
            command:
              - cat
              - /tmp/healthy2
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].readinessProbe
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].readinessProbe.exec
          value:
            command:
              - cat
              - /tmp/healthy5
  - it: should only return startup probe for main container
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
      startup:
        action:
          exec:
            command:
              - cat
              - /tmp/healthy
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].startupProbe
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].startupProbe
  - it: should only return startup probe for secondary container
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: latest
          startup:
            action:
              exec:
                command:
                  - cat
                  - /tmp/healthy
    asserts:
      - isNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].startupProbe
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].startupProbe
  - it: should return correct startup probes for all containers
    values:
      - ./values/cj-only.yaml
    asserts:
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[0].startupProbe
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].startupProbe.exec
          value:
            command:
              - cat
              - /tmp/healthy3
      - isNotNull:
          path: spec.jobTemplate.spec.template.spec.containers[1].startupProbe
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[1].startupProbe.exec
          value:
            command:
              - cat
              - /tmp/healthy6
  - it: should ensure unnecessary configuration is excluded with minimal setup
    set:
      workload: cronjob
      imageName: nginx
      imageTag: latest
      cronSettings.schedule: "* * * * *"
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers
          value:
            - image: nginx:latest
              imagePullPolicy: Always
              name: RELEASE-NAME
      - isNull:
          path: spec.jobTemplate.spec.template.metadata.annotations
      - isNull:
          path: spec.jobTemplate.spec.template.spec.nodeSelector
      - isNull:
          path: spec.jobTemplate.spec.template.spec.tolerations
      - isNull:
          path: spec.jobTemplate.spec.template.spec.topologySpreadConstraits
      - isNull:
          path: spec.jobTemplate.spec.template.spec.volumes
