suite: test deployment only
templates:
  - deployment.yaml
tests:
  - it: should result in an empty file
    release:
      name: test
      namespace: testing-ns
      isUpgrade: true
    asserts:
      - hasDocuments:
          count: 0
  - it: should return correct metadata information
    set:
      imageName: nginx
      imageTag: latest
      workload: deployment
    release:
      name: test
      namespace: testing-ns
      isUpgrade: true
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: apps/v1
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: test-deploy
      - equal:
          path: metadata.namespace
          value: testing-ns
      - isNotNull:
          path: metadata.labels
      - equal:
          path: spec.template.spec.containers[0].name
          value: test
  - it: should return non-null labels
    set:
      imageName: nginx
      imageTag: latest
      workload: deployment
    asserts:
      - isNotNull:
          path: metadata.labels
      - isNotNull:
          path: spec.selector.matchLabels
      - isNotNull:
          path: spec.template.metadata.labels
  - it: should return correct image information
    set:
      imageName: nginx
      imageTag: latest
      workload: deployment
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: nginx:latest
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always
  - it: should return correct image pull policy
    values:
      - ./values/deploy-only.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
  - it: should return container data for additional container
    values:
      - ./values/deploy-only.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[1].image
          value: nginx:v1.0.0
      - equal:
          path: spec.template.spec.containers[1].imagePullPolicy
          value: IfNotPresent
      - equal:
          path: spec.template.spec.containers[1].name
          value: secondary-container
  - it: should contain rolling update as scaling strategy
    values:
      - ./values/deploy-only.yaml
    asserts:
      - isNotNull:
          path: spec.strategy
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 3
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 0
  - it: should contain recreate as scaling strategy
    set:
      workload: deployment
      imageName: nginx
      imageTag: latest
      scalingConfig.type: Recreate
    asserts:
      - isNotNull:
          path: spec.strategy
      - equal:
          path: spec.strategy.type
          value: Recreate
  - it: should exclude undefined yaml data
    values:
      - ./values/deploy-only.yaml
    asserts:
      - isNull:
          path: spec.template.metadata.annotations
      - isNull:
          path: spec.template.spec.containers[0].args
      - isNull:
          path: spec.template.spec.containers[0].env
      - isNull:
          path: spec.template.spec.containers[0].resources
      - isNull:
          path: spec.template.spec.containers[0].volumeMounts
      - isNull:
          path: spec.template.spec.containers[1].args
      - isNull:
          path: spec.template.spec.containers[1].env
      - isNull:
          path: spec.template.spec.containers[1].resources
      - isNull:
          path: spec.template.spec.containers[1].volumeMounts
      - isNull:
          path: spec.template.spec.nodeSelector
      - isNull:
          path: spec.template.spec.tolerations
      - isNull:
          path: spec.template.spec.topologySpreadConstraits
      - isNull:
          path: spec.template.spec.volumes
