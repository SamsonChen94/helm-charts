suite: test deployment with secret
templates:
  - deployment.yaml
  - secret.yaml
tests:
  - it: should return correct document count
    values:
      - ./values/deploy-secret.yaml
      - ./values/example.secrets.yaml
    asserts:
      - hasDocuments:
          count: 1
        template: deployment.yaml
      - hasDocuments:
          count: 1
        template: secret.yaml
  - it: should contain checksum annotation for secrets
    values:
      - ./values/deploy-secret.yaml
      - ./values/example.secrets.yaml
    asserts:
      - isNotNull:
          path: spec.template.metadata.annotations
        template: deployment.yaml
  - it: should return secret for main container only
    set:
      workload: deployment
      imageName: nginx
      imageTag: latest
      secrets:
        files:
          - secret.conf
        strings:
          - key5
          - key6
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: v1.0.0
    values:
      - ./values/example.secrets.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[0]
          value:
            name: key5
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-secret
                key: key5
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[0].volumeMounts
        template: deployment.yaml
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /mount/secret
            name: secret
        template: deployment.yaml
      - isNull:
          path: spec.template.spec.containers[1].env
        template: deployment.yaml
      - isNull:
          path: spec.template.spec.containers[1].volumeMounts
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.volumes
        template: deployment.yaml
      - contains:
          path: spec.template.spec.volumes
          content:
            name: secret
            secret:
              defaultMode: 420
              secretName: RELEASE-NAME-secret
        template: deployment.yaml
  - it: should return secret for additional container only
    set:
      workload: deployment
      imageName: nginx
      imageTag: latest
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: v1.0.0
          secrets:
            files:
              - secret3.sh
            strings:
              - key7
    values:
      - ./values/example.secrets.yaml
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].env
        template: deployment.yaml
      - isNull:
          path: spec.template.spec.containers[0].volumeMounts
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[1].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[1].env[0]
          value:
            name: key7
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-secret
                key: key7
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[1].volumeMounts
        template: deployment.yaml
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /mount/secret
            name: secret
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.volumes
        template: deployment.yaml
      - contains:
          path: spec.template.spec.volumes
          content:
            name: secret
            secret:
              defaultMode: 420
              secretName: RELEASE-NAME-secret
        template: deployment.yaml
  - it: should return secret as container environment variables
    values:
      - ./values/deploy-secret.yaml
      - ./values/example.secrets.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[0]
          value:
            name: key5
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-secret
                key: key5
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[1]
          value:
            name: key6
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-secret
                key: key6
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[1].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[1].env[0]
          value:
            name: key7
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-secret
                key: key7
        template: deployment.yaml
  - it: should return secret as container mounted file
    values:
      - ./values/deploy-secret.yaml
      - ./values/example.secrets.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].volumeMounts
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /mount/secret
            name: secret
      - isNotNull:
          path: spec.template.spec.containers[1].volumeMounts
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /mount/secret
            name: secret
      - isNotNull:
          path: spec.template.spec.volumes
      - contains:
          path: spec.template.spec.volumes
          content:
            name: secret
            secret:
              defaultMode: 420
              secretName: RELEASE-NAME-secret
