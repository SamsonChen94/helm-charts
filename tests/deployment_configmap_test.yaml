suite: test deployment with config map
templates:
  - deployment.yaml
  - configMap.yaml
tests:
  - it: should return correct document count
    values:
      - ./values/deploy-cm.yaml
      - ./values/example.config.yaml
    asserts:
      - hasDocuments:
          count: 1
        template: deployment.yaml
      - hasDocuments:
          count: 1
        template: configMap.yaml
  - it: should contain checksum annotation for configmaps
    values:
      - ./values/deploy-cm.yaml
      - ./values/example.config.yaml
    asserts:
      - isNotNull:
          path: spec.template.metadata.annotations
        template: deployment.yaml
  - it: should return configmap for main container only
    set:
      workload: deployment
      imageName: nginx
      imageTag: latest
      configurations:
        files:
          - config.conf
        strings:
          - key1
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: v1.0.0
    values:
      - ./values/example.config.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[0]
          value:
            name: key1
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-cm
                key: key1
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[0].volumeMounts
        template: deployment.yaml
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /mount/config
            name: config
        template: deployment.yaml
      - isNull:
          path: spec.template.spec.containers[1].env
        template: deployment.yaml
      - isNull:
          path: spec.template.spec.containers[1].volumeMounts
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.volumes
        template: deployment.yaml
      - contains:
          path: spec.template.spec.volumes
          content:
            configMap:
              name: RELEASE-NAME-cm
            name: config
        template: deployment.yaml
  - it: should return configmap for additional container only
    set:
      workload: deployment
      imageName: nginx
      imageTag: latest
      additionalContainers:
        - name: secondary-container
          imageName: nginx
          imageTag: v1.0.0
          configurations:
            files:
              - config3.sh
            strings:
              - key3
    values:
      - ./values/example.config.yaml
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].env
        template: deployment.yaml
      - isNull:
          path: spec.template.spec.containers[0].volumeMounts
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[1].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[1].env[0]
          value:
            name: key3
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-cm
                key: key3
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[1].volumeMounts
        template: deployment.yaml
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /mount/config
            name: config
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.volumes
        template: deployment.yaml
      - contains:
          path: spec.template.spec.volumes
          content:
            configMap:
              name: RELEASE-NAME-cm
            name: config
        template: deployment.yaml
  - it: should return configmap as container environment variables
    values:
      - ./values/deploy-cm.yaml
      - ./values/example.config.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[0]
          value:
            name: key1
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-cm
                key: key1
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[0].env[1]
          value:
            name: key2
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-cm
                key: key2
        template: deployment.yaml
      - isNotNull:
          path: spec.template.spec.containers[1].env
        template: deployment.yaml
      - equal:
          path: spec.template.spec.containers[1].env[0]
          value:
            name: key3
            valueFrom:
              configMapKeyRef:
                name: RELEASE-NAME-cm
                key: key3
        template: deployment.yaml
  - it: should return configmap as container mounted file
    values:
      - ./values/deploy-cm.yaml
      - ./values/example.config.yaml
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].volumeMounts
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /mount/config
            name: config
      - isNotNull:
          path: spec.template.spec.containers[1].volumeMounts
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            mountPath: /mount/config
            name: config
      - isNotNull:
          path: spec.template.spec.volumes
      - contains:
          path: spec.template.spec.volumes
          content:
            configMap:
              name: RELEASE-NAME-cm
            name: config
