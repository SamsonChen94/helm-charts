suite: test ingress only
templates:
  - ingress.yaml
tests:
  - it: should result in an empty file
    release:
      name: test
      namespace: testing-ns
      isUpgrade: true
    asserts:
      - hasDocuments:
          count: 0
  - it: should return correct metadata information
    set:
      workload: deployment
      services:
        nodePort:
          portConfigs:
            - name: name-5
              containerPort: 8080
      ingress:
        enabled: true
        ingressConfig:
          - targets:
              - domainName: "example.com"
                serviceTargets:
                  - domainPath: "/*"
                    servicePort: 8080
    release:
      name: test
      namespace: testing-ns
      isUpgrade: true
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: networking.k8s.io/v1
      - isKind:
          of: Ingress
      - equal:
          path: metadata.name
          value: test-0-ing
      - equal:
          path: metadata.namespace
          value: testing-ns
      - isNotNull:
          path: metadata.labels
      - isNotNull:
          path: metadata.annotations
  - it: should return default annotations
    set:
      workload: deployment
      services:
        nodePort:
          portConfigs:
            - name: name-5
              containerPort: 8080
      ingress:
        enabled: true
        ingressConfig:
          - reservedIPName: "example-external-static-ip-name"
            ssl: true
            targets:
              - domainName: "example.com"
                serviceTargets:
                  - domainPath: "/*"
                    servicePort: 8080
    asserts:
      - equal:
          path: metadata.annotations.kubernetes\.io/ingress\.class
          value: gce
      - equal:
          path: metadata.annotations.kubernetes\.io/ingress\.global-static-ip-name
          value: example-external-static-ip-name
      - equal:
          path: metadata.annotations.networking\.gke\.io/managed-certificates
          value: RELEASE-NAME-0-mcrt
  - it: should return correct information for a single ingress configuration
    set:
      workload: deployment
      services:
        nodePort:
          portConfigs:
            - name: name-5
              containerPort: 8080
      ingress:
        enabled: true
        ingressConfig:
          - targets:
              - domainName: "example.com"
                serviceTargets:
                  - domainPath: "/*"
                    servicePort: 8080
    asserts:
      - hasDocuments:
          count: 1
      - isNotNull:
          path: spec.rules
      - equal:
          path: spec.rules[0].host
          value: example.com
      - isNotNull:
          path: spec.rules[0].http.paths
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /*
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: RELEASE-NAME-nodeport-svc
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 8080
  - it: should return correct information for multiple domains in a single ingress
    set:
      workload: deployment
      services:
        nodePort:
          portConfigs:
            - name: name-0
              containerPort: 8080
            - name: name-1
              containerPort: 8081
      ingress:
        enabled: true
        ingressConfig:
          - targets:
              - domainName: "example.com"
                serviceTargets:
                  - domainPath: "/*"
                    servicePort: 8080
                  - domainPath: "/foo/*"
                    servicePort: 8081
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.rules[0].host
          value: example.com
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: /*
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.name
          value: RELEASE-NAME-nodeport-svc
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 8080
      - equal:
          path: spec.rules[0].http.paths[1].path
          value: /foo/*
      - equal:
          path: spec.rules[0].http.paths[1].backend.service.name
          value: RELEASE-NAME-nodeport-svc
      - equal:
          path: spec.rules[0].http.paths[1].backend.service.port.number
          value: 8081
  - it: should return multiple ingress files with multiple domains
    values:
      - ./values/ing-only.yaml
    asserts:
      - hasDocuments:
          count: 2
      - contains:
          path: spec.rules
          content:
            host: example.com
            http:
              paths:
                - backend:
                    service:
                      name: RELEASE-NAME-nodeport-svc
                      port:
                        number: 8080
                  path: /*
                  pathType: ImplementationSpecific
                - backend:
                    service:
                      name: RELEASE-NAME-nodeport-svc
                      port:
                        number: 8081
                  path: /foo/*
                  pathType: ImplementationSpecific
        documentIndex: 0
      - contains:
          path: spec.rules
          content:
            host: example-2.com
            http:
              paths:
                - backend:
                    service:
                      name: RELEASE-NAME-nodeport-svc
                      port:
                        number: 8080
                  path: /*
                  pathType: ImplementationSpecific
        documentIndex: 0
      - contains:
          path: spec.rules
          content:
            host: example-3.com
            http:
              paths:
                - backend:
                    service:
                      name: RELEASE-NAME-nodeport-svc
                      port:
                        number: 8082
                  path: /*
                  pathType: ImplementationSpecific
        documentIndex: 1
